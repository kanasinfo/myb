<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	 xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/data/mongo
	http://www.springframework.org/schema/data/mongo/spring-mongo-1.8.xsd
	http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
	<context:component-scan base-package="com.myb.portal">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- Root Context: shared resources visible to all other web components -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:connection.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- mysql数据库连接 -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
		destroy-method="close">
		<property name="driverClass" value="${driverClass}" />
		<property name="jdbcUrl" value="${jdbcUrl}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="idleConnectionTestPeriodInMinutes" value="${bonecp.idleConnectionTestPeriodInMinutes}" />
		<property name="idleMaxAgeInMinutes" value="${bonecp.idleMaxAgeInMinutes}" />
		<property name="maxConnectionsPerPartition" value="${bonecp.maxConnectionsPerPartition}" />
		<property name="minConnectionsPerPartition" value="${bonecp.minConnectionsPerPartition}" />
		<property name="partitionCount" value="${bonecp.partitionCount}" />
		<property name="acquireIncrement" value="${bonecp.acquireIncrement}" />
		<property name="statementsCacheSize" value="${bonecp.statementsCacheSize}" />
	</bean>
	<!-- mongodb连接 -->
<!-- 	<mongo:mongo id="mongo" replica-set="${mongod.host_port}"> -->
<!-- 		<mongo:options connections-per-host="" -->
<!-- 		threads-allowed-to-block-for-connection-multiplier="" -->
<!-- 		connect-timeout="${mongo.connectTimeout}" -->
<!-- 		max-wait-time="${mongo.maxWaitTime}" -->
<!--         auto-connect-retry="${mongo.autoConnectRetry}" -->
<!--         socket-keep-alive="${mongo.socketKeepAlive}" -->
<!--         socket-timeout="${mongo.socketTimeout}" -->
<!--         write-number="1" -->
<!--         write-timeout="0" -->
<!--         write-fsync="true"/> -->
<!-- 	</mongo:mongo> -->
<!-- 	<mongo:db-factory dbname="mongoDbFactory" mongo-ref="mongo" username="${mongo.userName}" password="${mongo.passWord}"/> -->
	<mongo:db-factory write-concern="NORMAL" id="mongoDbFactory" dbname="${mongo.dbname}" host="${mongo.host}" port="${mongo.port}" username="${mongo.userName}" password="${mongo.passWord}"/>
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
	</bean>
	
	<!-- <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate"> -->
	<!-- <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"></constructor-arg> -->
	<!-- </bean> -->

	<!-- MongoDB GridFS Template 支持，操作mongodb存放的文件 -->
	<mongo:mapping-converter id="converter"
		db-factory-ref="mongoDbFactory" />
	<bean id="gridFsTemplate" class="org.springframework.data.mongodb.gridfs.GridFsTemplate">
		<constructor-arg ref="mongoDbFactory" />
		<constructor-arg ref="converter" />
	</bean>

	<!-- spring JPA -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	<bean id="persistenceUnitManager"
		class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
		<property name="persistenceXmlLocations">
			<list>
				<value>classpath*:META-INF/persistence.xml</value>
			</list>
		</property>
		<property name="dataSources">
			<map>
				<entry key="localDataSource" value-ref="dataSource" />
			</map>
		</property>
		<!-- if no datasource is specified, use this one -->
		<property name="defaultDataSource" ref="dataSource" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitManager" ref="persistenceUnitManager" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<!--property name="databasePlatform" value="org.hibernate.dialect.SQLServerDialect"/ -->
				<property name="database" value="MYSQL" />
				<property name="showSql" value="true" />
			</bean>
		</property>
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	
  <jpa:repositories base-package="com.myb.portal.repository"  transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory"/>

	<!-- bean post-processor for JPA annotations -->
	<!-- <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/> 
		As an alternative to defining a PersistenceAnnotationBeanPostProcessor explicitly, 
		consider using the Spring context:annotation-config XML element in your application 
		context configuration. Doing so automatically registers all Spring standard 
		post-processors for annotation-based configuration, including CommonAnnotationBeanPostProcessor 
		and so on. -->
	<!-- annotation config for all beans -->
	<context:annotation-config />
</beans>